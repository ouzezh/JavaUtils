package com.ozz.demo.excel.poi.reader;

import com.ozz.demo.office.excel.reader.base.MySheetContentsHandler;
import com.ozz.demo.office.excel.reader.base.MyXSSFSheetXMLHandler;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Map;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.util.XMLHelper;
import org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable;
import org.apache.poi.xssf.eventusermodel.XSSFReader;
import org.apache.poi.xssf.model.StylesTable;
import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;

public class ExcelReaderUtil {
  public static void main(String[] args) {
    Path path = Paths.get("C:\\Users\\ouzezhou\\Desktop\\Temp\\20201127\\test_eventusermodel.xlsx");
    List<Map<String, String>> data = ExcelReaderUtil.parse(path, 0);
    for(Map<String, String> row : data) {
      System.out.println(row.toString());
    }
  }

  public static List<Map<String, String>> parse(Path path, int skipRow) {
    try (InputStream input = Files.newInputStream(path)) {
      return parse(input, skipRow);
    } catch (RuntimeException e) {
      throw e;
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
  }

  public static List<Map<String, String>> parse(InputStream input, int skipRow) {
    try {
      try (OPCPackage pkg = OPCPackage.open(input)) {
        XSSFReader xssfReader = new XSSFReader(pkg);
        StylesTable styles = xssfReader.getStylesTable();
        ReadOnlySharedStringsTable strings = new ReadOnlySharedStringsTable(pkg, false);

        try (InputStream sheetInputStream = xssfReader.getSheetsData().next();) {
          XMLReader sheetParser = XMLHelper.newXMLReader();
          MySheetContentsHandler contentsHandler = new MySheetContentsHandler(skipRow);
          sheetParser.setContentHandler(new MyXSSFSheetXMLHandler(styles, strings, contentsHandler, false));
          sheetParser.parse(new InputSource(sheetInputStream));
          return contentsHandler.getDataList();
        }
      }
    } catch (RuntimeException e) {
      throw e;
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
  }

}
